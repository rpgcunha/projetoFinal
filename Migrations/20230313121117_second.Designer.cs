// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apoio_decisao_medica.Data;

#nullable disable

namespace apoio_decisao_medica.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230313121117_second")]
    partial class second
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("apoio_decisao_medica.Models.catDoenca", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("TcatDoenca");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.catExame", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("TcatExame");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.catSintoma", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("TcatSintoma");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.doenca", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("catDoencaId")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("catDoencaId");

                    b.ToTable("Tdoenca");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.doencaExame", b =>
                {
                    b.Property<int>("doencaId")
                        .HasColumnType("int");

                    b.Property<int>("exameId")
                        .HasColumnType("int");

                    b.Property<double>("relevancia")
                        .HasColumnType("float");

                    b.HasKey("doencaId", "exameId");

                    b.HasIndex("exameId");

                    b.ToTable("TdoencaExame");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.doencaSintoma", b =>
                {
                    b.Property<int>("doencaId")
                        .HasColumnType("int");

                    b.Property<int>("sintomaId")
                        .HasColumnType("int");

                    b.Property<double>("relevancia")
                        .HasColumnType("float");

                    b.HasKey("doencaId", "sintomaId");

                    b.HasIndex("sintomaId");

                    b.ToTable("TdoencaSintoma");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.exame", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("catExameId")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("catExameId");

                    b.ToTable("Texame");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.hospital", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Thospital");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.medico", b =>
                {
                    b.Property<int>("bi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("bi"));

                    b.Property<string>("especialidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("bi");

                    b.ToTable("Tmedico");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.processoExame", b =>
                {
                    b.Property<int>("processoId")
                        .HasColumnType("int");

                    b.Property<int>("exameId")
                        .HasColumnType("int");

                    b.HasKey("processoId", "exameId");

                    b.HasIndex("exameId");

                    b.ToTable("TprocessoExame");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.processoSintoma", b =>
                {
                    b.Property<int>("processoId")
                        .HasColumnType("int");

                    b.Property<int>("sintomaId")
                        .HasColumnType("int");

                    b.HasKey("processoId", "sintomaId");

                    b.HasIndex("sintomaId");

                    b.ToTable("TprocessoSintoma");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.processoUtente", b =>
                {
                    b.Property<int>("processo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("processo"));

                    b.Property<string>("dataAbertura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dataFecho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("doencaId")
                        .HasColumnType("int");

                    b.Property<int>("hospitalId")
                        .HasColumnType("int");

                    b.Property<int>("medicoBi")
                        .HasColumnType("int");

                    b.Property<int>("utenteId")
                        .HasColumnType("int");

                    b.HasKey("processo");

                    b.HasIndex("doencaId");

                    b.HasIndex("hospitalId");

                    b.HasIndex("medicoBi");

                    b.HasIndex("utenteId");

                    b.ToTable("TprocessoUtente");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.sintoma", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("catSintomaId")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("catSintomaId");

                    b.ToTable("Tsintoma");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.utente", b =>
                {
                    b.Property<int>("numeroUtente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("numeroUtente"));

                    b.Property<string>("cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dataNascimento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("numeroUtente");

                    b.ToTable("Tutente");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.doenca", b =>
                {
                    b.HasOne("apoio_decisao_medica.Models.catDoenca", "catDoenca")
                        .WithMany("doencas")
                        .HasForeignKey("catDoencaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("catDoenca");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.doencaExame", b =>
                {
                    b.HasOne("apoio_decisao_medica.Models.doenca", "doenca")
                        .WithMany("doencaExames")
                        .HasForeignKey("doencaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apoio_decisao_medica.Models.exame", "exame")
                        .WithMany("doencaExames")
                        .HasForeignKey("exameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("doenca");

                    b.Navigation("exame");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.doencaSintoma", b =>
                {
                    b.HasOne("apoio_decisao_medica.Models.doenca", "doenca")
                        .WithMany("doencaSintomas")
                        .HasForeignKey("doencaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apoio_decisao_medica.Models.sintoma", "sintoma")
                        .WithMany("doencaSintomas")
                        .HasForeignKey("sintomaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("doenca");

                    b.Navigation("sintoma");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.exame", b =>
                {
                    b.HasOne("apoio_decisao_medica.Models.catExame", "catExame")
                        .WithMany("exames")
                        .HasForeignKey("catExameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("catExame");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.processoExame", b =>
                {
                    b.HasOne("apoio_decisao_medica.Models.exame", "exame")
                        .WithMany("processoExames")
                        .HasForeignKey("exameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apoio_decisao_medica.Models.processoUtente", "processoUtente")
                        .WithMany("processoExames")
                        .HasForeignKey("processoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("exame");

                    b.Navigation("processoUtente");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.processoSintoma", b =>
                {
                    b.HasOne("apoio_decisao_medica.Models.processoUtente", "processoUtente")
                        .WithMany("processoSintomas")
                        .HasForeignKey("processoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apoio_decisao_medica.Models.sintoma", "sintoma")
                        .WithMany("processoSintomas")
                        .HasForeignKey("sintomaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("processoUtente");

                    b.Navigation("sintoma");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.processoUtente", b =>
                {
                    b.HasOne("apoio_decisao_medica.Models.doenca", "doenca")
                        .WithMany("processoUtentes")
                        .HasForeignKey("doencaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apoio_decisao_medica.Models.hospital", "hospital")
                        .WithMany("processoUtentes")
                        .HasForeignKey("hospitalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apoio_decisao_medica.Models.medico", "medico")
                        .WithMany("processoUtentes")
                        .HasForeignKey("medicoBi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apoio_decisao_medica.Models.utente", "utente")
                        .WithMany("processoUtentes")
                        .HasForeignKey("utenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("doenca");

                    b.Navigation("hospital");

                    b.Navigation("medico");

                    b.Navigation("utente");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.sintoma", b =>
                {
                    b.HasOne("apoio_decisao_medica.Models.catSintoma", "catSintoma")
                        .WithMany("sintomas")
                        .HasForeignKey("catSintomaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("catSintoma");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.catDoenca", b =>
                {
                    b.Navigation("doencas");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.catExame", b =>
                {
                    b.Navigation("exames");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.catSintoma", b =>
                {
                    b.Navigation("sintomas");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.doenca", b =>
                {
                    b.Navigation("doencaExames");

                    b.Navigation("doencaSintomas");

                    b.Navigation("processoUtentes");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.exame", b =>
                {
                    b.Navigation("doencaExames");

                    b.Navigation("processoExames");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.hospital", b =>
                {
                    b.Navigation("processoUtentes");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.medico", b =>
                {
                    b.Navigation("processoUtentes");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.processoUtente", b =>
                {
                    b.Navigation("processoExames");

                    b.Navigation("processoSintomas");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.sintoma", b =>
                {
                    b.Navigation("doencaSintomas");

                    b.Navigation("processoSintomas");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.utente", b =>
                {
                    b.Navigation("processoUtentes");
                });
#pragma warning restore 612, 618
        }
    }
}
