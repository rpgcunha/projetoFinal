// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apoio_decisao_medica.Data;

#nullable disable

namespace apoio_decisao_medica.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230315101931_Exames1")]
    partial class Exames1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("apoio_decisao_medica.Models.CatDoenca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TcatDoencas");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.CatExame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TcatExames");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.Doenca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CatDoencaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CatDoencaId");

                    b.ToTable("Tdoencas");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.Exame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CatExameId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CatExameId");

                    b.ToTable("Texames");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.Doenca", b =>
                {
                    b.HasOne("apoio_decisao_medica.Models.CatDoenca", "CatDoenca")
                        .WithMany("Doencas")
                        .HasForeignKey("CatDoencaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CatDoenca");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.Exame", b =>
                {
                    b.HasOne("apoio_decisao_medica.Models.CatExame", "CatExame")
                        .WithMany("Exames")
                        .HasForeignKey("CatExameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CatExame");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.CatDoenca", b =>
                {
                    b.Navigation("Doencas");
                });

            modelBuilder.Entity("apoio_decisao_medica.Models.CatExame", b =>
                {
                    b.Navigation("Exames");
                });
#pragma warning restore 612, 618
        }
    }
}
